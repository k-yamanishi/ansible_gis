---
# CentOS6 provides mapserver in yum repository. But CentOS7 put an end to publish.
# So, we must compile mapserver.
# http://mapserver.org/installation/unix.html

- name: Install dependent services
  yum: name={{ item }} state=present
  with_items:
    - httpd
    - memcached

- name: Install build tools
  yum: name={{ item }} state=present
  with_items:
    - git
    - cmake
    - make
    - gcc
    - gcc-c++

- name: Install required libraries for mapcache
  yum: name={{ item }} state=present
  with_items:
    - httpd
    - libpng
    - libjpeg
    - libcurl
    - pcre
    - pixman
    - fcgi
    - gdal
    - geos
    - sqlite
    - libtiff
    - libgeotiff
    - db4
    - libmemcached

- yum: name="{{ item }}-devel" state=present
  with_items:
    - httpd
    - libpng
    - libjpeg
    - libcurl
    - pcre
    - pixman
    - fcgi
    - gdal
    - geos
    - sqlite
    - libtiff
    - libgeotiff
    - db4
    - libmemcached

- name: Check whether mapserver was installed or not
  stat: path=/usr/local/bin/mapcache
  register: mapcache

- name: Download mapcache source
  git:
    repo=https://github.com/mapserver/mapcache.git
    dest="{{ src_dir }}"

- name: Create work directory for building mapcache
  file: path={{ src_dir }}/mapcache/build state=absent force=yes
  ignore_errors: yes

- name: Configure mapcache
  command:
    chdir={{ src_dir }}/mapcache/build
    cmake .. -DWITH_MEMCACHE=1
  when: not mapcache.stat.exists

- name: Make mapcache
  command:
    chdir={{ src_dir }}/mapcache/build
    make
  when: not mapcache.stat.exists

- name: Install mapcache
  command:
    chdir={{ src_dir }}/{{ mapserver_version }}/build
    make install
  when: not mapcache.stat.exists

- name: Create symbolic link
  file: src=/usr/local/bin/mapserv dest=/var/www/cgi-bin/mapserv state=link mode="o+x"

- name: Check whether httpd.conf contains "LD_LIBRARY_PATH"
  command:
    grep LD_LIBRARY_PATH /etc/httpd/conf/httpd.conf
  register:
    check_mapserver_settings
  failed_when: check_mapserver_settings.rc not in [0, 1]
  changed_when: False

# To Create the patch file:
# 1. login remote redmine server
# 2. backup httpd.conf to httpd.conf.org
# 3. change httpd.conf
# 4. exit redmine server to ansible host
# 5. run remote diff command from ansible host
#    $ vagrant ssh gis -- sudo diff /etc/httpd/conf/httpd.conf.org /etc/httpd/conf/httpd.conf > httpd.conf.patch
- name: apply patch to /etc/httpd/conf/httpd.conf
  patch: >
    src=httpd.conf.patch
    dest=/etc/httpd/conf/httpd.conf
    backup=yes
  when: check_mapserver_settings.rc == 1

- name: Restart apache
  service:
    name=httpd
    state=restarted
    enabled=yes
